---
title: "Income Prediction Based on Race and Gender"
author: "Harshil Kurapati"
format: html
execute: 
  echo: false    
  warning: false 
  message: false 
---

## Introduction

This project delves into the impact of race and gender on income levels in the United States by analyzing data from the Adult Census Income dataset using a Bayesian Regression Model. Through this analysis, we uncover significant disparities in income distribution, highlighting how different racial and gender groups experience varying levels of income. The key visualization below illustrates these disparities, providing a clear and engaging representation of the data. The insights derived from this study underscore the persistent inequalities in income distribution and highlight the urgent need for targeted interventions and policies to address these disparities effectively.


```{r setup, include=FALSE}
suppressPackageStartupMessages({
  library(tidyverse)
  library(primer.data)
  library(brms)
  library(tidybayes)
  library(gtsummary)
  library(ggridges)
})
```

```{r}
#|cache: true
# Load libraries
library(tidyverse)
library(ggplot2)

# Load the dataset
data <- read.csv('adult.csv')

# Data preparation
data <- data %>%
  mutate(income = ifelse(income == " <=50K", "Less than 50K", "More than 50K"),
         race = factor(race, levels = c("White", "Black", "Asian-Pac-Islander", "Amer-Indian-Eskimo", "Other")),
         sex = factor(sex, levels = c("Male", "Female")))

# Create a unique and eye-catching stacked bar plot
ggplot(data, aes(x = race, fill = income)) +
  geom_bar(position = "stack", aes(y = ..count..), width = 0.7, color = "white") +
  facet_wrap(~ sex) +
  scale_fill_manual(values = c("Less than 50K" = "#FF9AA2", "More than 50K" = "#FFBF9A")) +
  labs(
    title = "Income Distribution by Race and Gender",
    x = "Race",
    y = "Count",
    fill = "Income Level",
    caption = "Source: Kaggle"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "#333333"),
    axis.title.x = element_text(size = 14, face = "bold"),
    axis.title.y = element_text(size = 14, face = "bold"),
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    legend.position = "top",
    legend.title = element_text(size = 12, face = "bold"),
    legend.text = element_text(size = 10),
    plot.background = element_rect(fill = "#F5F5F5"),
    panel.border = element_rect(color = "#DDDDDD", fill = NA, size = 0.5),
    plot.caption = element_text(hjust = 0.5, size = 12, face = "italic")
  )

```


